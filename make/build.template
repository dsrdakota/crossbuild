#!/bin/sh
# Shell script to build GNU Make in the absence of any 'make' program.
# @configure_input@

# Copyright (C) 1993-2018 Free Software Foundation, Inc.
# This file is part of GNU Make.
#
# GNU Make is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 3 of the License, or (at your option) any later
# version.
#
# GNU Make is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.

# See Makefile.in for comments describing these variables.

LIBOBJDIR=lib/
U=

top_srcdir="@top_srcdir@"
CC="@CC@"
CFLAGS="@CFLAGS@ @GUILE_CFLAGS@"
CPPFLAGS="@CPPFLAGS@"
LDFLAGS="@AM_LDFLAGS@ @LDFLAGS@"
ALLOCA="@ALLOCA@"
LOADLIBES="@LIBS@ @GUILE_LIBS@ @LIBINTL@"
LIBOBJS="@LIBOBJS@"
REMOTE="@REMOTE@"
OBJEXT="@OBJEXT@"
EXEEXT="@EXEEXT@"

# Use our old-style glob implementation
test x"@USE_SYSTEM_GLOB@" = xno && LIBOBJS="${LIBOBJS} ${LIBOBJDIR}fnmatch.$OBJEXT ${LIBOBJDIR}glob.$OBJEXT"

# Common prefix for machine-independent installed files.
prefix="@prefix@"
# Common prefix for machine-dependent installed files.
exec_prefix=`eval echo @exec_prefix@`
# Directory to find libraries in for '-lXXX'.
libdir=${exec_prefix}/lib
# Directory to search by default for included makefiles.
includedir=${prefix}/include

localedir=${prefix}/share/locale

defines="-DLOCALEDIR=\"${localedir}\" -DLIBDIR=\"${libdir}\" -DINCLUDEDIR=\"${includedir}\" @DEFS@"

# Exit as soon as any command fails.
set -e

# These are all the objects we need to link together.
objs="%objs% src/remote-${REMOTE}.${OBJEXT} ${LIBOBJS}"

case $LIBOBJS in
    (*alloca*) cp "$top_srcdir"/lib/alloca.in.h lib/alloca.h ;;
esac
case $LIBOBJS in
    (*fnmatch*) cp "$top_srcdir"/lib/fnmatch.in.h lib/fnmatch.h ;;
esac
case $LIBOBJS in
    (*glob*) cp "$top_srcdir"/lib/glob.in.h lib/glob.h ;;
esac

# Compile the source files into those objects.
for file in `echo ${objs} | sed 's/\.'${OBJEXT}'/.c/g'`; do
  echo compiling ${file}...
  $CC $defines $CPPFLAGS $CFLAGS \
      -c -Isrc -I"$top_srcdir"/src -Ilib -I"$top_srcdir"/lib "$top_srcdir"/$file
done

# The object files were actually all put in the current directory.
# Remove the source directory names from the list.
srcobjs="$objs"
objs=
for obj in $srcobjs; do
  objs="$objs `basename $obj`"
done

# Link all the objects together.
echo linking make...
$CC $CFLAGS $LDFLAGS $objs $LOADLIBES -o makenew${EXEEXT}
echo done
mv -f makenew${EXEEXT} make${EXEEXT}
